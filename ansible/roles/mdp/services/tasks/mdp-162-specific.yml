- name: Start MySql container
  shell: docker-compose -f {{ mdp_config_directory }}/docker-compose.yml up -d mysql

- name: Ensure tmp dir exists
  file:
    path: /tmp/automata/sql
    state: directory

- name: Copy SQL scripts to tmp dir
  copy:
    src: "{{ item }}"
    dest: "/tmp/automata/sql/{{ item }}"
  with_items:
    - create_dip_databases.sql
    - node.sql
    - rbac.sql
    - scheduler.sql
    - summer.sql

- name: Collect hosts facts
  setup:

- name: Waiting MySql ready
  shell: while [[ ! $(mysql -u{{ mysql_username }} -p{{ mysql_password }} -h{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }} -e 'show databases;') =~ .*Database.* ]]; do sleep 5s; done
  when:
    - inventory_hostname in groups['mdp_node']

- name: Setup MySQL databases
  shell: |
    mysql -u{{ mysql_username }} -p{{ mysql_password }} -h{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }} < /tmp/automata/sql/create_dip_databases.sql
    mysql -u{{ mysql_username }} -p{{ mysql_password }} -h{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }} node < /tmp/automata/sql/node.sql
    mysql -u{{ mysql_username }} -p{{ mysql_password }} -h{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }} scheduler  < /tmp/automata/sql/scheduler.sql
    # mysql -u{{ mysql_username }} -p{{ mysql_password }} -h{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }} rbac  < /tmp/automata/sql/rbac.sql
  when:
    - inventory_hostname in groups['mdp_node']

- include_tasks: "start.yml"

- name: Ensure jq tool installed
  yum:
    name: jq
    state: present
  become: true
  when:
    - inventory_hostname in groups['mdp_node']

- name: Check service status
  shell: curl -s http://{{ groups['mdp_node'][0] }}:{{ consul_port|default(8500) }}/v1/health/state/passing | jq .[].ServiceName | wc -l
  register: consul_services
  until: consul_services.stdout|int >= 7
  retries: 20
  delay: 30
  when:
    - inventory_hostname in groups['mdp_node']

- name: Setup Summer Database
  shell: mysql -u{{ mysql_username }} -p{{ mysql_password }} -h{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }} summer < /tmp/automata/sql/summer.sql
  when:
    - inventory_hostname in groups['mdp_node']

- name: Remove tmp SQL scripts
  file:
    path: /tmp/automata/sql
    state: absent
  when:
    - inventory_hostname in groups['mdp_node']

- name: Waiting rbac service ready
  uri:
    url: http://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:9999/actuator/info
    status_code: 200
  retries: 6
  delay: 10
  when:
    - inventory_hostname in groups['mdp_node']

- name: Initialize Rbac
  uri:
    url: http://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:{{ rbac_port|default("8867") }}/rbac/system/addInitData
    method: GET
    headers:
      accept: "application/json"
  when:
    - inventory_hostname in groups['mdp_node']

- name: Waiting galaxy service ready
  uri:
    url: http://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:{{ galaxy_port|default("9999") }}/actuator/info
    status_code: 200
  retries: 6
  delay: 10
  when:
    - inventory_hostname in groups['mdp_node']

- name: Initialize Galaxy
  uri:
    url: http://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:{{ galaxy_port|default("9999") }}/collectd/system/addInitData
    method: GET
    headers:
      accept: "*/*"
  when:
    - inventory_hostname in groups['mdp_node']
