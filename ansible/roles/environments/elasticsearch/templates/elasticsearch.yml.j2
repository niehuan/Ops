# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{ elasticsearch_cluster_name }}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ ansible_hostname }}
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data:  {% for path in elasticsearch_data_path %}{{ path }}{% if not loop.last %},{% endif %}{% endfor %}

#
# Path to log files:
#
path.logs: {{ elasticsearch_log_path }}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
network.host: 0.0.0.0
#
# Set a custom port for HTTP:
#
http.port: {{ es_restport|default("9200") }}

transport.tcp.port: {{ es_port|default("9300") }}
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
discovery.zen.ping.unicast.hosts: [{% for host in groups['elasticsearch'] %}"{{ host }}"{% if not loop.last %},{% endif %}{% endfor %}]
#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
discovery.zen.minimum_master_nodes: {{ (groups['elasticsearch_master'] | length) * 0.5 | round(0, 'floor') | int }}
#
# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true

script.painless.regex.enabled: true

script.max_compilations_per_minute: 10000

#indices.memory.index_buffer_size: 15%
#thread_pool.bulk.queue_size: 1024
#threadpool.index.type: fixed
#threadpool.index.size: 100
#threadpool.index.queue_size: 50
#index.cache.field.max_size: 50000
#index.cache.field.expire: 10m
#index.cache.field.type: soft
#indices.breaker.total.limit: 30%
#indices.breaker.request.limit: 6%
#indices.breake

{% if groups['elasticsearch']|length > 1 %}
{% if inventory_hostname in groups['elasticsearch_master'] %}
node.master: true
node.data: false
{% elif inventory_hostname in groups['elasticsearch_data'] %}
node.master: false
node.data: true
{% elif inventory_hostname in groups['elasticsearch_client'] %}
node.master: false
node.data: false
{% else %}
node.master: true
node.data: true
{% endif %}
{% endif %}